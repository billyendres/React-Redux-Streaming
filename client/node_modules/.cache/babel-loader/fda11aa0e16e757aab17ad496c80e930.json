{"ast":null,"code":"import _classCallCheck from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/billyendres/Documents/react/streams/client/src/components/streams/StreamList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamList, _Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, stream.description)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(Component); //Get list of streams available as props inside component\n//Object.values = takes all values inside of the object and turns into an array\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/billyendres/Documents/react/streams/client/src/components/streams/StreamList.js"],"names":["React","Component","connect","fetchStreams","StreamList","props","streams","map","stream","id","title","description","renderList","mapStateToProps","state","Object","values"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;wCACe;AACnB,WAAKC,KAAL,CAAWF,YAAX;AACA;;;iCAEY;AACZ,aAAO,KAAKE,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AACvC,eACC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACED,MAAM,CAACE,KADT,EAEC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BF,MAAM,CAACG,WAArC,CAFD,CAFD,CADD;AASA,OAVM,CAAP;AAWA;;;6BAEQ;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKC,UAAL,EAAjC,CAFD,CADD;AAMA;;;;EA1BuBX,S,GA6BzB;AACA;;;AACA,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AAAER,IAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,OAApB;AAAX,GAAP;AACA,CAFD;;AAIA,eAAeJ,OAAO,CACrBW,eADqB,EAErB;AAAEV,EAAAA,YAAY,EAAZA;AAAF,CAFqB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchStreams();\n\t}\n\n\trenderList() {\n\t\treturn this.props.streams.map(stream => {\n\t\t\treturn (\n\t\t\t\t<div className=\"item\" key={stream.id}>\n\t\t\t\t\t<i className=\"large middle aligned icon camera\" />\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t{stream.title}\n\t\t\t\t\t\t<div className=\"description\">{stream.description}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Streams</h2>\n\t\t\t\t<div className=\"ui celled list\">{this.renderList()}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n//Get list of streams available as props inside component\n//Object.values = takes all values inside of the object and turns into an array\nconst mapStateToProps = state => {\n\treturn { streams: Object.values(state.streams) };\n};\n\nexport default connect(\n\tmapStateToProps,\n\t{ fetchStreams }\n)(StreamList);\n"]},"metadata":{},"sourceType":"module"}