{"ast":null,"code":"import _regeneratorRuntime from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\"; //Takes userId as argument and payload\n//referenced from onAuthChange function in GoogleOath\n\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n}; //Creating new async POST req function\n\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post(\"/streams\", formValues);\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/billyendres/Documents/react/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","response","data"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACCC,OADD,EAECC,QAFD,EAGCC,aAHD,EAICC,aAJD,EAKCC,YALD,EAMCC,aAND,EAOCC,WAPD,QAQO,SARP,C,CAUA;AACA;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;AAC/B,SAAO;AACNC,IAAAA,IAAI,EAAET,OADA;AAENU,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC5B,SAAO;AACNF,IAAAA,IAAI,EAAER;AADA,GAAP;AAGA,CAJM,C,CAMP;;AACA,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU,EAAI;AACzC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADjB;;AAAA;AACAG,gBAAAA,QADA;AAGNF,gBAAAA,QAAQ,CAAC;AAAEL,kBAAAA,IAAI,EAAEP,aAAR;AAAuBQ,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAzC,iBAAD,CAAR;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,CANM","sourcesContent":["import streams from \"../apis/streams\";\nimport {\n\tSIGN_IN,\n\tSIGN_OUT,\n\tCREATE_STREAM,\n\tFETCH_STREAMS,\n\tFETCH_STREAM,\n\tDELETE_STREAM,\n\tEDIT_STREAM\n} from \"./types\";\n\n//Takes userId as argument and payload\n//referenced from onAuthChange function in GoogleOath\nexport const signIn = userId => {\n\treturn {\n\t\ttype: SIGN_IN,\n\t\tpayload: userId\n\t};\n};\n\nexport const signOut = () => {\n\treturn {\n\t\ttype: SIGN_OUT\n\t};\n};\n\n//Creating new async POST req function\nexport const createStream = formValues => {\n\treturn async dispatch => {\n\t\tconst response = await streams.post(\"/streams\", formValues);\n\n\t\tdispatch({ type: CREATE_STREAM, payload: response.data });\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}