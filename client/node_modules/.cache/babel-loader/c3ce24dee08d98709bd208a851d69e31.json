{"ast":null,"code":"import _classCallCheck from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/billyendres/Documents/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/billyendres/Documents/react/streams/client/src/components/streams/StreamShow.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport flv from \"flv.js\";\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamShow, _Component);\n\n  function StreamShow(props) {\n    var _this;\n\n    _classCallCheck(this, StreamShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).call(this, props));\n    _this.videoRef = React.createRef;\n    return _this;\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n      this.player = flv.createPlayer({\n        type: \"flv\",\n        url: \"http://localhost:8000/live/\".concat(this.props.match.params.id, \".flv\")\n      });\n      this.player.attachMediaElement(this.videoRef.current);\n      this.player.load();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: \"100%\"\n        },\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.stream.title), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.stream.description));\n    }\n  }]);\n\n  return StreamShow;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/billyendres/Documents/react/streams/client/src/components/streams/StreamShow.js"],"names":["React","Component","connect","fetchStream","flv","StreamShow","props","videoRef","createRef","match","params","id","player","createPlayer","type","url","attachMediaElement","current","load","stream","width","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;IAEMC,U;;;;;AACL,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,oFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBP,KAAK,CAACQ,SAAtB;AAFkB;AAGlB;;;;wCAEmB;AACnB,WAAKF,KAAL,CAAWH,WAAX,CAAuB,KAAKG,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA,WAAKC,MAAL,GAAcR,GAAG,CAACS,YAAJ,CAAiB;AAC9BC,QAAAA,IAAI,EAAE,KADwB;AAE9BC,QAAAA,GAAG,uCAAgC,KAAKT,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxD;AAF2B,OAAjB,CAAd;AAIA,WAAKC,MAAL,CAAYI,kBAAZ,CAA+B,KAAKT,QAAL,CAAcU,OAA7C;AACA,WAAKL,MAAL,CAAYM,IAAZ;AACA;;;6BAEQ;AACR,UAAI,CAAC,KAAKZ,KAAL,CAAWa,MAAhB,EAAwB;AACvB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACA;;AACD,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,GAAG,EAAE,KAAKZ,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAAEa,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAqD,QAAA,QAAQ,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKd,KAAL,CAAWa,MAAX,CAAkBE,KAAvB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKf,KAAL,CAAWa,MAAX,CAAkBG,WAAvB,CAHD,CADD;AAOA;;;;EA3BuBrB,S;;AA6BzB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC5C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAAChB,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACA,CAFD;;AAIA,eAAeT,OAAO,CACrBqB,eADqB,EAErB;AAAEpB,EAAAA,WAAW,EAAXA;AAAF,CAFqB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport flv from \"flv.js\";\n\nclass StreamShow extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.videoRef = React.createRef;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.fetchStream(this.props.match.params.id);\n\t\tthis.player = flv.createPlayer({\n\t\t\ttype: \"flv\",\n\t\t\turl: `http://localhost:8000/live/${this.props.match.params.id}.flv`\n\t\t});\n\t\tthis.player.attachMediaElement(this.videoRef.current);\n\t\tthis.player.load();\n\t}\n\n\trender() {\n\t\tif (!this.props.stream) {\n\t\t\treturn <div>Loading...</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<video ref={this.videoRef} style={{ width: \"100%\" }} controls />\n\t\t\t\t<h1>{this.props.stream.title}</h1>\n\t\t\t\t<h5>{this.props.stream.description}</h5>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state, ownProps) => {\n\treturn { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(\n\tmapStateToProps,\n\t{ fetchStream }\n)(StreamShow);\n"]},"metadata":{},"sourceType":"module"}